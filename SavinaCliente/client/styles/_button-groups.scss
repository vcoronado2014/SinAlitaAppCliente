//
// Button groups
// --------------------------------------------------
// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  position      : relative;
  display       : inline-block;
  vertical-align: middle; // match .btn alignment given font-size hack above

  > .btn {
    position: relative;
    float   : left;

    // Bring the "active" button to the front
    &.active,
    &:active,
    &:focus,
    &:hover {
      z-index: 2;
    }

    &:focus {

      // Remove focus outline when dropdown JS adds it after closing the menu
      outline: 0;
    }
  }
}

.btn-group-grid {
  @include display(flex);
  margin-left : floor($padding-base / -2);
  margin-right: floor($padding-base / -2);

  .btn {
    @include flex(1);
    margin-left : floor($padding-base / 2);
    margin-right: floor($padding-base / 2);
  }

  .btn + .btn {
    margin-top: 0;
  }
}

.btn-group > .btn:first-child {
  margin-left: 0;
}

.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
  outline: 0;
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation@mixin
.btn-group-xs > .btn {
  @extend .btn-xs;
}

.btn-group-sm > .btn {
  @extend .btn-sm;
}

.btn-group-lg > .btn {
  @extend .btn-lg;
}

// Split button dropdowns
// ----------------------
// Give the line between buttons some depth
.btn-group > .btn + .dropdown-toggle {
  padding-left : $padding-base;
  padding-right: $padding-base;
}

.btn-group > .btn-lg + .dropdown-toggle {
  padding-left : 12px;
  padding-right: 12px;
}

// Reposition the caret
.btn .caret {
  margin-left: 0;
}

.btn-group-vertical {
   > .btn,
   > .btn-group > .btn,
  > .btn-group {
    display  : block;
    float    : none;
    width    : 100%;
    max-width: 100%;
  }

  // Clear floats so dropdown menus can be properly placed
  > .btn-group {
    @include clearfix();

    > .btn {
      float: none;
    }
  }

   > .btn + .btn,
   > .btn-group + .btn,
   > .btn-group + .btn-group,
  > .btn + .btn-group {

    //    margin-top: -1px;
    margin-left: 0;
  }
}

// Justified button groups
// ----------------------
.btn-group-justified,
.btn-group-tabs {
  @include display(flex);
  width: 100%;

   > .btn,
  > .btn-group {
    @include flex(1);
    min-width: 1%;
  }
}

// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `opacity`. We cannot
// use `display: none;` or `visibility: hidden;` as that also hides the popover.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 for more.
[data-toggle="buttons"] > .btn > input[type="checkbox"],
[data-toggle="buttons"] > .btn > input[type="radio"] {
  position: absolute;
  z-index : -1;
  opacity : 0;
}

.btn-group-tabs {
  .btn {
    position    : relative;
    margin-right: ($line-height-computed + ($padding-base-vertical * 2));

    &:after {
      content            : '';
      width              : 0;
      height             : 0;
      position           : absolute;
      top                : 0;
      right              : -42px;
      z-index            : -1;
      border-width       : 42px;
      border-top-color   : transparent;
      border-bottom-width: 0;
      border-right-width : 0;
      border-style       : solid;
    }

    &:before {
      content            : '';
      width              : 0;
      height             : 0;
      position           : absolute;
      top                : 0;
      left               : -($line-height-computed + ($padding-base-vertical * 2));
      z-index            : -1;
      border-width       : ($line-height-computed + ($padding-base-vertical * 2));
      border-bottom-color: transparent;
      border-top-width   : 0;
      border-left-width  : 0;
      border-style       : solid;
    }

    &:active {
      &:after {
        border-top-color: transparent;
      }

      &:before {
        border-bottom-color: transparent;
      }
    }

    &:last-child {
      margin-right: 0;

      &:after {
        content: none;
      }
    }

    &:first-child {
      &:before {
        content: none;
      }
    }
  }
}
