/**
 * Scaffolding
 *
 * Base style rules.
 */
* {
  @include box-sizing(border-box);
}

*:after,
*:before {
  @include box-sizing(border-box);
}

/* Scrollbar */
::-webkit-scrollbar {
  width: 0;
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.5);

  &:hover {
    background-color: rgba(255, 255, 255, 0.3);
  }
}

::-webkit-scrollbar-corner {
  opacity: 0;
}

::-webkit-scrollbar-button {}

::-webkit-scrollbar-track-piece {}

::-webkit-resizer {}

/* Body reset */
body,
html {
  @include user-select(none);
  width      : 100%;
  height     : 100%;
  overflow   : hidden;
  text-shadow: $text-shadow;
  cursor     : default;
  font-weight: 500;
}

html {
  font-size                  : 10px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  @include display(flex);
  @include flex-direction(column);
  @include align-items(stretch);
  @include flex(0 0 auto);
  @include flex-wrap(nowrap);
  font-family           : $font-family-sans-serif;
  font-size             : $font-size-base;
  line-height           : $line-height-base;
  color                 : $text-color;
  -webkit-font-smoothing: antialiased;
}

main {
  @include display(flex);
  @include flex-wrap(wrap);
  @include flex-direction(row);
  @include flex(1);
  padding   : $padding-base 0;
  position  : relative;
  min-height: 300px;
}

main-content,
main-loader {
  padding: 0 $padding-base;
}

main-content {
  @include display(flex);
  @include flex-flow(row nowrap);
  @include align-items(stretch);
  @include align-content(stretch);
  @include flex(1);
  overflow  : hidden;
  min-height: 300px;

  > * {
    @include flex(1 1 auto);
  }
}

.scroll-y {
  overflow-y: scroll;
  overflow-x: hidden;
}

/* Reset for relevant elements */
button,
input,
select,
textarea {
  font-family: inherit;
  font-size  : inherit;
  line-height: inherit;
}

/* Links */
a {
  @include transition(background-color 216ms ease);
  color          : $link-color;
  text-decoration: none;
  font-weight    : bold;

  &:focus,
  &:hover {
    color: $link-hover-color;
  }

  &:focus {
    @include tab-focus();
  }
}

a {
  color: $link-color;
}

// Figures
//
// We reset this here because previously Normalize had no `figure` margins. This
// ensures we don't break anyone's use of the element.
figure {
  margin: 0;
}

// Horizontal rules
hr {
  margin-top: $line-height-computed;

  //    margin-bottom: $line-height-computed;
  border    : 0;

  //    border-top: 1px solid $hr-border;
}

.block {
  display: block!important;
}

.highlight {
  border: 1px solid $default-hardest !important;
}

include-template {
  display: block;
}

answer,
attachment {
  display: block;
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content/
.sr-only {
  position: absolute;
  width   : 1px;
  height  : 1px;
  margin  : -1px;
  padding : 0;
  overflow: hidden;
  clip    : rect(0, 0, 0, 0);
  border  : 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate
.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width   : auto;
    height  : auto;
    margin  : 0;
    overflow: visible;
    clip    : auto;
  }
}

datepicker {
  display: block;
}
